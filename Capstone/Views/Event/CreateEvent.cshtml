@model Capstone.Models.CreateEventViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}

@using (Html.BeginForm("CreateEvent", "Event", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h2>Create a new event.</h2>

    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
        @Html.LabelFor(m => m.EventDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.EventDate, new { @type="date", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.EventDate, "", new { @class = "text-danger" })
        </div>
    </div>*@
    <div class="form-group">
        @Html.LabelFor(m => m.StartTime, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.StartTime, new { @type = "datetime-local", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.StartTime, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.EndTime, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.EndTime, new { @type = "datetime-local", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.EndTime, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Location, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Location, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Location, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Type, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @{
            var TypeList = new[]
                {
                    new SelectListItem { Value = "1", Text = "Seminar" },
                    new SelectListItem { Value = "2", Text = "Meeting" },
                    new SelectListItem { Value = "3", Text = "Training" },
                    new SelectListItem { Value = "4", Text = "Social" },
                    new SelectListItem { Value = "5", Text = "Other" }
                };
            }
            @Html.DropDownListFor(m => m.Type, TypeList, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LogoPath, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LogoPath, new {@type="file", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LogoPath, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-inline">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-success" value="Create" />
            <input type="button" class="btn btn-danger" value="Cancel" />
        </div>
    </div>
    <hr/>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
}






